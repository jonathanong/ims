
defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/node:8
      environment:
        NPM_CONFIG_LOGLEVEL: error # make npm commands less noisy
        JOBS: max # https://gist.github.com/ralphtheninja/f7c45bdee00784b41fed

browser-defaults: &browser-defaults
  working_directory: ~/code
  docker:
    - image: circleci/node:8-browsers
      environment:
        NPM_CONFIG_LOGLEVEL: error # make npm commands less noisy
        JOBS: max # https://gist.github.com/ralphtheninja/f7c45bdee00784b41fed
        DATABASE_URL: postgres://root:@localhost/ims
        DATABASE_NAME: ims
    - image: mdillon/postgis:10-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: ims
        POSTGRES_PASSWORD: ""

server-defaults: &server-defaults
  working_directory: ~/code
  docker:
    - image: circleci/node:8
      environment:
        NPM_CONFIG_LOGLEVEL: error # make npm commands less noisy
        JOBS: max # https://gist.github.com/ralphtheninja/f7c45bdee00784b41fed
        DATABASE_URL: postgres://root:@localhost/ims
        DATABASE_NAME: ims
    - image: mdillon/postgis:10-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: ims
        POSTGRES_PASSWORD: ""

restore_cache: &restore_cache
  restore_cache:
    keys:
      - code-{{ .Branch }}-{{ checksum ".nvmrc" }}-{{ checksum "package.json"}}
      - code-master-{{ checksum ".nvmrc" }}-{{ checksum "package.json"}}

save_cache: &save_cache
  save_cache:
    key: code-{{ .Branch }}-{{ checksum ".nvmrc" }}-{{ checksum "package.json"}}
    paths:
      - node_modules

ignore-gh-pages: &ignore-gh-pages
  filters:
    branches:
      ignore:
        - gh-pages

test-coverage: &test-coverage
  run: npx codecov && rm -rf codecov

version: 2
jobs:
  test:
    <<: *server-defaults
    steps:
      - checkout
      - *restore_cache
      - run: npm install
      - run: npm run eslint
      - run: npm run stylelint
      - run: npm run build
      - run: npm run build-storybook
      - run: npm run reset-db
      - run: npm run test:server -- --maxWorkers 4
      - *test-coverage
      - run: npm run test:jsdom -- --maxWorkers 2
      - *test-coverage
      - *save_cache

  test-browsers:
    <<: *browser-defaults
    steps:
      - checkout
      - *restore_cache
      - run: npm install # just in case
      - run: npm run build
      - run: npm run reset-db
      - run:
          name: server
          command: node server
          background: true
      - run: sleep 3
      - run: npm run monitors
      - run: npm run automation

  publish-storybook:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run: npm run build-storybook
      - run: cp -r .circleci storybook-static/
      - run: npx storybook-to-ghpages --existing-output-dir=storybook-static

  build-docker-image:
    machine: true
    steps:
      - checkout
      - run: docker build . -t jonathanong/ims:$CIRCLE_SHA1 --build-arg GIT_COMMIT_SHA=$CIRCLE_SHA1

workflows:
  version: 2
  commit:
    jobs:
      - test: *ignore-gh-pages
      - test-browsers:
          <<: *ignore-gh-pages
          requires:
            - test
      - build-docker-image: *ignore-gh-pages
      - publish-storybook:
          requires:
            - test
          filters:
            branches:
              only:
                - master
